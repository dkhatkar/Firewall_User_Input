#!/bin/bash
# Assignment 2 - Firewall
# 
# Kalen Wessel - A00738617
# Daniel Khatkar - A00746060
#
##########
# User Input
# This is where the user will specify which
# ports they want to allow through on tcp,
# udp, and icmp. They will also specify which 
# interface names they want to use as well as 
# IPs
##########
#
# Gather TCP Ports.
#
##########
echo "Please enter TCP ports you want to allow."
echo "Example: 21,23,80,156"
echo -n "TCP: " 
read -a tcpPorts
##########
#
# Gather UDP Ports
#
##########
echo "Please enter UDP ports you want to allow."
echo "Example: 67,68"
echo -n "UDP: " 
read -a udpPorts
###########
# 
# Gather ICMP type numbers
#
###########
echo "Please enter ICMP type numbers you want to allow."
echo "Example: 0,7"
echo -n "UDP: " 
read -a icmpTypes
###########
#
# Internal Network 
# - Interface Name
# - Address Space
#
###########
echo "Please enter the Internal Network Interface Name"
echo "Example: eth0"
echo -n "Internal Interface Name: "
read internalInterface
#
echo "Please enter the Internal Network address space."
echo "Example: 192.168.1.0/16"
echo -n "Internaal address space: "
read internalAddress
###########
#
# External Network
# - Interface Name
# - Address Space
#
############
echo "Please enter the ExtKAYLAernal Network Interface Name"
echo "Example: eth1"
echo -n "External Interface Name: "
read externalInterface
#
echo "Please enter the External Network address space."
echo "Example: 192.168.0.0/16"
echo -n "External address space: "
read extrenalAddress
#
############
# Results
############
#
clear
echo "-------------"
echo "TCP Ports: ${tcpPorts[@]}"
echo "UDP Ports: ${udpPorts[@]}"
echo "ICMP Types: ${icmpTypes[@]}"
echo "--------------"
echo "Internal Configureation"
echo "Interface: ${internalInterface}"
echo "Address Space: ${internalAddress}"
echo "--------------"
echo "External Configuration"
echo "Interface: ${externalInterface}"
echo "Address Space: ${externalAddress}"
#
echo "Configuring IPTABLES...."
#
#############
#
# IPTABLE RULES
#
############
# Let's clear out any current rules to avoid conflicts
iptables -F
iptables -X

#Set default drop policies.
iptables -P INPUT DROP
iptables -P OUTPUT DROP
iptables -P FORWARD DROP

#Set our forwarding between nic cards, and set NAT so data will reach internal machine.
iptables -A FORWARD -i ${externalInterface} -o ${internalInterface} -j ACCEPT
iptables -A FORWARD -o ${internalInterface} -i ${externalInterface} -j ACCEPT
iptables -A POSTROUTING -t nat -o ${externalInterface} -j MASQUERADE

#Accept Fragments
iptables -A INPUT -f -i ${externalInterface} -j ACCEPT

#Drop all TCP packets with SYN and FIN bit set
iptables -A INPUT -p tcp --syn SYN,FIN -i ${externalInterface} -j DROP

#DROP any packets with a source address from the outside matching your internal network
iptables -A INPUT -s ${internalAddress} -i ${externalInterface} -j DROP

#DROP all external traffic directed to ports 32768 – 32775, 137 – 139, TCP ports 111 and 515.
iptables -A INPUT -i ${externalInterface} -m multiport -dport 32768:32775,137:139 -j DROP
iptables -A INPUT -i ${externalInterface} -m multiport -p tcp -dport 111,515 -j DROP

#Do not allow telnet packets at all.
iptables -A INPUT -i ${externalInterface} -p tcp -dport 23 -j DROP
iptables -A OUTPUT -o ${externalInterface} -p tcp -sport 23 j DROP

#accept udp packets to port 53 for DNS
iptables -A INPUT -i ${externalInterface} -p udp --sport 53 -j ACCEPT
iptables -A OUTPUT -o ${externalInterface} -p udp --dport 53 -j ACCEPT

#accept udp packets to port 67:68 for DHCP
iptables -A INPUT -i ${externalInterface} -p udp --dport 67:68 --sport 67:68 -j ACCEPT
iptables -A OUTPUT -o ${externalInterface} -p udp --dport 67:68 --sport 67:68 -j ACCEPT

#For FTP and SSH services, set control connections to "Minimum Delay" and FTP
#data to "Maximum Throughput"
iptables -t mangle -A PREROUTING -m multiport -p tcp --dport 22,ftp,ftp-data -j TOS --set-tos Minimize-Delay
iptables -t mangle -A PREROUTING -m multiport -p tcp --sport 22,ftp,ftp-data -j TOS --set-tos Minimize-Delay
iptables -t mangle -A PREROUTING -m multiport -p tcp --dport 22,ftp,ftp-data -j TOS --set-tos Maximize-Throughput
iptables -t mangle -A PREROUTING -m multiport -p tcp --sport 22,ftp,ftp-data -j TOS --set-tos Maximize-Throughput

#ACCEPT all inbound and outbound TCP packets to allowed TCP ports
iptables -A INPUT -i ${externalInterface} -p tcp -m multiport -dport ${tcpPorts[@]} -m state --state NEW,ESTABLISHED -j ACCEPT
iptables -A OUTPUT -o ${externalInterface} -p tcp -m multiport -sport ${tcpPorts[@]} -m state --state ESTABLISHED-j ACCEPT

#ACCEPT all inbound and outbound ICMP packets to allowed UDP ports
iptables -A INPUT -i ${externalInterface} -p udp -m multiport -dport ${udpPorts[@]} -m state --state NEW,ESTABLISHED-j ACCEPT
iptables -A OUTPUT -o ${externalInterface} -p udp -m multiport -sport ${udpPorts[@]} -m state --state ESTABLISHED-j ACCEPT

#ACCEPT all inbound and outbound ICMP packets of allowed ICMP types
for c in ${icmpType[@]}
do
iptables -A INPUT -i ${externalInterface} -p icmp --icmptype ${icmpType[c]} -j ACCEPT
iptables -A OUTPUT -o ${externalInterface} -p icmp --icmptype ${icmpType[c]} -j ACCEPT
done

#Reject connections from outside sources by dropping SYN packets.
iptables -i ${externalInterface} -A INPUT -p tcp --syn -j DROP

#drop everything else
iptables -A INPUT -j DROP
iptables -A FORWARD -j DROP
iptables -A OUTPUT -j DROP

